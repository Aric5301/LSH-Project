/*------------------------------------------------------------------------------
 * File          : input_handler.sv
 * Project       : RTL
 * Author        : epebar
 * Creation date : Oct 15, 2022
 * Description   :
 *------------------------------------------------------------------------------*/

module input_handler #(
	parameter WINDOW_SIZE = 128, 
			  KMER_SIZE = 16
	)(
	  input logic hashing_is_done,
	  output logic  [1:0]                     window       [0:WINDOW_SIZE-1],// consists of WINDOW_SIZE kmers
	  output logic window_id,
	  output logic window_reset,
	  output logic ready_for_hashing,
	  output logic is_insert
	  );
int fd, i = 0;
string line[128];
logic [16:0] temp;
int dummy;

task window_maker(fd);
	while(!($feof(fd))) begin
		window_reset = 1'b1;
		ready_for_hashing = 1'b0;
		for(int j = 0 ; j < WINDOW_SIZE ; j++) begin
			temp = $fgetc(fd);
			case (temp)
				"A": window[j] = 2'b00;
				"C": window[j] = 2'b01;
				"G": window[j] = 2'b10;
				"T": window[j] = 2'b11;
			endcase
		 
		end
		window_id = i;
		window_reset = 1'b0;
		$display("%d" , window[0]);
		ready_for_hashing = 1'b1;
		while (!(hashing_is_done)) begin
			#1;
		end
		#2;
		if(!($feof(fd))) begin
			i++;
			dummy = $fseek(fd, (WINDOW_SIZE - KMER_SIZE) * i, 0);
		end
	end
endtask

initial begin
	fd = $fopen("read_sv", "r");
	
	is_insert = 1'b1;
	$fclose(fd);
end
endmodule
 