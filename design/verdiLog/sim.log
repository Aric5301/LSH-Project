Command: /users/epebar/Project/design/simv -sml=verdi +UVM_VERDI_TRACE=UVM_AWARE +fsdb+gate=off -ucli2Proc -ucli -l /users/epebar/Project/design/verdiLog/sim.log
Chronologic VCS simulator copyright 1991-2020
Contains Synopsys proprietary information.
Compiler version R-2020.12_Full64; Runtime version R-2020.12_Full64;  Sep  2 18:36 2022

ucli% loaddl -simv /eda/synopsys/2020-21/RHELx86/VERDI_2020.12/share/PLI/VCS/LINUXAMD64/libnovas.so LoadFSDBDumpCmd;LoadFSDBDumpCmd
LoadFSDBDumpCmd success
ucli% config ckptfsdbcheck off;config endofsim noexit;config onfail {enable all};config followactivescope on;catch {setUcliVerdiConnected};set watch::resultTagsForVerdiBP {<ucli_break_bp_status_begin> <ucli_break_bp_status_end>};set ucliCore::support_restore_through_stask_in_verdi 1;cbug::config pretty_print auto;fsdbDumpfile {/users/epebar/Project/design/inter.fsdb} ;fsdbDumpflush ; 
*Verdi* Loading libsscore_vcs202012.so
FSDB Dumper for VCS, Release Verdi_R-2020.12, Linux x86_64/64bit, 11/19/2020
(C) 1996 - 2020 by Synopsys, Inc.
*Verdi* FSDB WARNING: The FSDB file already exists. Overwriting the FSDB file may crash the programs that are using this file.
*Verdi* : Create FSDB file '/users/epebar/Project/design/inter.fsdb'
*Verdi* : Flush all FSDB Files at 0 s.

ucli% fsdbDumpvars 1 "test_tb"  +all +trace_process;fsdbDumpflush 
*Verdi* : Begin traversing the scope (test_tb), layer (1).
*Verdi* : Enable +trace_process and +all dumping.
*Verdi* : End of traversing.
*Verdi* : Flush all FSDB Files at 0 s.

ucli% synEnv::hasFataled
0
ucli% ucliCore::getToolPID
32130
ucli% sps_interactive
*Verdi* : Enable RPC Server(32130)

ucli% ucliCore::getToolPID
32130
ucli% ucliCore::getToolPID
32130
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% puts $ucliCore::nativeUcliMode
0

ucli% ucliCore::getToolTopPID
32130
ucli% pid
32142
ucli% synUtils::sendTool -active {_icl_createSharedMemory /tmp/vcs_dve_general.epebar.32130 }

ucli% if { [info vars watch::vcbp_str_len_limit_of_get_value] != ""} {set watch::vcbp_str_len_limit_of_get_value 1024}
1024
ucli% info command stateVerdiChangeCB

ucli% proc stateVerdiChangeCB args { if {$ucliGUI::state eq "terminated"} {puts "\n<VERDI_Terminated>\n";catch {setVerdiSimTerminated}}}

ucli% trace variable ucliGUI::state wu stateVerdiChangeCB

ucli% if {[catch {rename synopsys::restore verdiHack::restore} ]} {puts "0"}

ucli% proc synopsys::restore {args} { verdiHack::restore $args; puts "\n<VERDI_RESTORE>\n"}

ucli% if {[catch {rename quit verdiHack::quit} ]} {puts "0"}

ucli% proc quit {args} { if {[string length $args] == 0} { verdiHack::quit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n quit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::quit $args; } }

ucli% if {[catch {rename exit verdiHack::exit} ]} {puts "0"}

ucli% proc exit {args} { if {[string length $args] == 0} { verdiHack::exit; } elseif {([string equal "-h" $args] == 1)||([string equal "-he" $args] == 1)||([string equal "-hel" $args] == 1)||([string equal "-help" $args] == 1)} { puts "\n exit           # Exit the simulation.\n \[-noprompt\]        (Exit the simulation and Verdi.)\n"} elseif {([string equal "-n" $args] == 1)||([string equal "-no" $args] == 1)||([string equal "-nop" $args] == 1)||([string equal "-nopr" $args] == 1)||([string equal "-nopro" $args] == 1)||([string equal "-noprom" $args] == 1)||([string equal "-nopromp" $args] == 1)||([string equal "-noprompt" $args] == 1)} { puts "\nVERDI_EXIT_N\n" } else { verdiHack::exit $args; } }

ucli% proc checkpoint::beforeRecreate {} { sps_interactive }

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% save::getUserdefinedProcs
::stateVerdiChangeCB ::LoadFSDBDumpCmd
ucli% set ucliCore::resultTagsForVerdi [list <?special_verdi_begin?> <?special_verdi_end?>]
<?special_verdi_begin?> <?special_verdi_end?>
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% fsdbDumpflush 
*Verdi* : Flush all FSDB Files at 0 s.

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% fsdbDumpflush 
*Verdi* : Flush all FSDB Files at 0 s.

ucli% senv
activeDomain: Verilog
activeFile: /users/epebar/Project/design/test_tb.sv
activeFrame: 
activeLine: 9
activeScope: test_tb
activeThread: 
endCol: 0
file: /users/epebar/Project/design/test_tb.sv
frame: 
fsdbFilename: 
hasTB: 0
inputFilename: 
keyFilename: ucli.key
line: 9
logFilename: /users/epebar/Project/design/verdiLog/sim.log
macroIndex: -1
macroOffset: -1
pid: 32130
scope: test_tb
startCol: 0
state: stopped
thread: 
time: 0
timePrecision: 1 s
vcdFilename: 
vpdFilename:
ucli% puts $::ucliCore::cbug_active
0

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% checkpoint -list -all
There are no checkpoints present.
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% stop
No stop points are set
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% run
<slp!&*()_+>
@0 a = 0 b = 0 s1= 0 c1 = 0 s2 = 0 c2 = x s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 0<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@2 a = 1 b = 0 s1= 1 c1 = 1 s2 = 1 c2 = 0 s3 = 1 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 2<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@4 a = 0 b = 1 s1= 1 c1 = 1 s2 = 1 c2 = 1 s3 = 1 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 4<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@6 a = 1 b = 1 s1= 0 c1 = 0 s2 = 0 c2 = 1 s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 6<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@8 a = 0 b = 0 s1= 0 c1 = 1 s2 = 0 c2 = 1 s3 = 0 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 8<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@10 a = 1 b = 0 s1= 1 c1 = 0 s2 = 1 c2 = 1 s3 = 1 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 10<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@12 a = 0 b = 1 s1= 1 c1 = 0 s2 = 1 c2 = 0 s3 = 1 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 12<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@14 a = 1 b = 1 s1= 0 c1 = 1 s2 = 0 c2 = 0 s3 = 0 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 14<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@16 a = 0 b = 0 s1= 0 c1 = 0 s2 = 0 c2 = 0 s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 16<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@18 a = 1 b = 0 s1= 1 c1 = 1 s2 = 1 c2 = 0 s3 = 1 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 18<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@20 a = 0 b = 1 s1= 1 c1 = 1 s2 = 1 c2 = 1 s3 = 1 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 20<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@22 a = 1 b = 1 s1= 0 c1 = 0 s2 = 0 c2 = 1 s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 22<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@24 a = 0 b = 0 s1= 0 c1 = 1 s2 = 0 c2 = 1 s3 = 0 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 24<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@26 a = 1 b = 0 s1= 1 c1 = 0 s2 = 1 c2 = 1 s3 = 1 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 26<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@28 a = 0 b = 1 s1= 1 c1 = 0 s2 = 1 c2 = 0 s3 = 1 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 28<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@30 a = 1 b = 1 s1= 0 c1 = 1 s2 = 0 c2 = 0 s3 = 0 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 30<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@32 a = 0 b = 0 s1= 0 c1 = 0 s2 = 0 c2 = 0 s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 32<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@34 a = 1 b = 0 s1= 1 c1 = 1 s2 = 1 c2 = 0 s3 = 1 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 34<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@36 a = 0 b = 1 s1= 1 c1 = 1 s2 = 1 c2 = 1 s3 = 1 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 36<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@38 a = 1 b = 1 s1= 0 c1 = 0 s2 = 0 c2 = 1 s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 38<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@40 a = 0 b = 0 s1= 0 c1 = 1 s2 = 0 c2 = 1 s3 = 0 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 40<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@42 a = 1 b = 0 s1= 1 c1 = 0 s2 = 1 c2 = 1 s3 = 1 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 42<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@44 a = 0 b = 1 s1= 1 c1 = 0 s2 = 1 c2 = 0 s3 = 1 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 44<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@46 a = 1 b = 1 s1= 0 c1 = 1 s2 = 0 c2 = 0 s3 = 0 c3 = 1
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 46<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
<slp!&*()_+>
@48 a = 0 b = 0 s1= 0 c1 = 0 s2 = 0 c2 = 0 s3 = 0 c3 = 0
<slb!&*()_+>---<sls!&*()_+>loc: -1<sls!&*()_+>src: test_tb.sv<sls!&*()_+>line: 17<sls!&*()_+>time: 48<sls!&*()_+>length: 0<sls!&*()_+>...<sls!&*()_+><sle!&*()_+>
$finish called from file "test_tb.sv", line 21.
$finish at simulation time                   50
Simulation complete, time is 50.
test_tb.sv, 21 : #50 $finish;

ucli% synEnv::hasFataled
0
ucli% ucliCore::getToolPID
32130
ucli% save::getUserdefinedProcs
::stateVerdiChangeCB ::LoadFSDBDumpCmd
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% fsdbDumpflush 
*Verdi* : Flush all FSDB Files at 50 s.

ucli% senv
activeDomain: Verilog
activeFile: /users/epebar/Project/design/test_tb.sv
activeFrame: 
activeLine: 21
activeScope: test_tb
activeThread: 
endCol: 0
file: /users/epebar/Project/design/test_tb.sv
frame: 
fsdbFilename: 
hasTB: 0
inputFilename: 
keyFilename: ucli.key
line: 21
logFilename: /users/epebar/Project/design/verdiLog/sim.log
macroIndex: -1
macroOffset: -1
pid: 32130
scope: test_tb
startCol: 0
state: stopped
thread: 
time: 50
timePrecision: 1 s
vcdFilename: 
vpdFilename:
ucli% puts $::ucliCore::cbug_active
0

ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% checkpoint -list -all
There are no checkpoints present.
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% stop
No stop points are set
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% stop -absolute 5s 
1
ucli% stop -show 1
1: -absolute 5s
ucli% stop -delete *
1
ucli% if {[catch {ucliCore::setFocus tool}]} {}

ucli% 